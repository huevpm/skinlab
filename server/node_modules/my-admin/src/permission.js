import Vue from 'vue'
import router from './router'
import store from './store'

import NProgress from 'nprogress' // progress bar
import '#/components/NProgress/nprogress.less' // progress bar custom style
import notification from 'ant-design-vue/es/notification'
import { setDocumentTitle, domTitle } from '#/utils/domUtil'
import { ACCESS_TOKEN } from '#/store/mutation-types'


let { PublicPages } = require('@/package.json');

let whitePublic = PublicPages ? Object.keys(PublicPages) || [] : [];



NProgress.configure({ showSpinner: false }) // NProgress Configuration

const whiteList = ['login', 'register', 'registerResult', 'AppInfo', ...whitePublic] // no redirect whitelist


const defaultRoutePath = '/dashboard/workplace'

router.beforeEach((to, from, next) => {
    NProgress.start() // start progress bar
    to.meta && (typeof to.meta.title !== 'undefined' && setDocumentTitle(`${to.meta.title} - ${domTitle}`))
    if (Vue.ls.get(ACCESS_TOKEN)) {
        /* has token */
        if (to.path === '/public/login') {
            next({ path: defaultRoutePath })
            NProgress.done()
        } else {

            if (store.getters.roles.length === 0) {
                store
                    .dispatch('GetInfo')
                    .then(res => {
                        const roles = res.result && res.result.role
                        store.dispatch('GenerateRoutes', { roles }).then(() => {
                            // 根据roles权限生成可访问的路由表
                            // 动态添加可访问路由表
                            router.addRoutes(store.getters.addRouters)
                            const redirect = decodeURIComponent(from.query.redirect || to.path)
                            if (to.path === redirect) {
                                // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record
                                next({ ...to, replace: true })
                            } else {
                                // 跳转到目的路由
                                next({ path: redirect })
                            }
                        })

                        const middlesFiles = require.context('@/middleware', false, /\.js$/)
                        const middles = middlesFiles.keys().reduce((middles, middlePath) => {
                            const middleName = middlePath.replace(/^\.\/(.*)\.\w+$/, '$1');
                            const value = middlesFiles(middlePath)
                            middles[middleName] = value.default
                            return middles
                        }, {})

                        for (var i in middles) {
                            if (Object.keys(middles[i]).length !== 0) {
                                middles[i](Vue.prototype.$cloud, store.state.user.info.userid).then(res => {
                                    let userInfo = store.state.user.info
                                    userInfo[i] = res
                                    store.commit('SET_INFO', userInfo)

                                })
                            }
                        }

                    })
                    .catch(() => {
                        notification.error({
                            message: '错误',
                            description: '请求用户信息失败，请重试'
                        })
                        store.dispatch('Logout').then(() => {
                            next({ path: '/public/login', query: { redirect: to.fullPath } })
                        })
                    })
            } else {
                next()
            }
        }
    } else {
        if (whiteList.includes(to.name)) {
            // 在免登录白名单，直接进入
            next()
        } else {
            let toPath = "/home"
            if (to.fullPath !== "/login") {
                toPath = to.fullPath
            }
            next({ path: '/public/login', query: { redirect: toPath } })
            NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it
        }
    }
})

router.afterEach(() => {
    NProgress.done() // finish progress bar
})